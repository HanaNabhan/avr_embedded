
Button.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b5c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000dc8  00000000  00000000  00000bb0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000990  00000000  00000000  00001978  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 ac 05 	jmp	0xb58	; 0xb58 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
 */
#include<avr/io.h>
#include"STD_MACROS.h"
#include"LED.h"

int main(void){
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62

	BUTTON_voidINIT('D',0);
  74:	84 e4       	ldi	r24, 0x44	; 68
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	60 e0       	ldi	r22, 0x00	; 0
  7a:	70 e0       	ldi	r23, 0x00	; 0
  7c:	0e 94 8b 05 	call	0xb16	; 0xb16 <BUTTON_voidINIT>
	LED_voidINIT('A',0);
  80:	81 e4       	ldi	r24, 0x41	; 65
  82:	60 e0       	ldi	r22, 0x00	; 0
  84:	0e 94 38 05 	call	0xa70	; 0xa70 <LED_voidINIT>

	while(1){
		if(BUTTON_u8Read('D',0)){
  88:	84 e4       	ldi	r24, 0x44	; 68
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	60 e0       	ldi	r22, 0x00	; 0
  8e:	70 e0       	ldi	r23, 0x00	; 0
  90:	0e 94 9c 05 	call	0xb38	; 0xb38 <BUTTON_u8Read>
  94:	00 97       	sbiw	r24, 0x00	; 0
  96:	29 f0       	breq	.+10     	; 0xa2 <main+0x36>
			LED_voidON('A',0);
  98:	81 e4       	ldi	r24, 0x41	; 65
  9a:	60 e0       	ldi	r22, 0x00	; 0
  9c:	0e 94 49 05 	call	0xa92	; 0xa92 <LED_voidON>
  a0:	f3 cf       	rjmp	.-26     	; 0x88 <main+0x1c>
		}
		else {
			LED_voidOFF('A',0);
  a2:	81 e4       	ldi	r24, 0x41	; 65
  a4:	60 e0       	ldi	r22, 0x00	; 0
  a6:	0e 94 5a 05 	call	0xab4	; 0xab4 <LED_voidOFF>
  aa:	ee cf       	rjmp	.-36     	; 0x88 <main+0x1c>

000000ac <DIO_voidSetPinDir>:
 * DESCRIPTION : Used to set the specific pin from a specific port as input or output
 * RETURN : No return
 */


void DIO_voidSetPinDir(uint8 PortName , uint8 PinNumber , DIOPinDIR value){
  ac:	df 93       	push	r29
  ae:	cf 93       	push	r28
  b0:	00 d0       	rcall	.+0      	; 0xb2 <DIO_voidSetPinDir+0x6>
  b2:	00 d0       	rcall	.+0      	; 0xb4 <DIO_voidSetPinDir+0x8>
  b4:	0f 92       	push	r0
  b6:	cd b7       	in	r28, 0x3d	; 61
  b8:	de b7       	in	r29, 0x3e	; 62
  ba:	89 83       	std	Y+1, r24	; 0x01
  bc:	6a 83       	std	Y+2, r22	; 0x02
  be:	4b 83       	std	Y+3, r20	; 0x03
	switch(PortName){
  c0:	89 81       	ldd	r24, Y+1	; 0x01
  c2:	28 2f       	mov	r18, r24
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	3d 83       	std	Y+5, r19	; 0x05
  c8:	2c 83       	std	Y+4, r18	; 0x04
  ca:	8c 81       	ldd	r24, Y+4	; 0x04
  cc:	9d 81       	ldd	r25, Y+5	; 0x05
  ce:	84 34       	cpi	r24, 0x44	; 68
  d0:	91 05       	cpc	r25, r1
  d2:	09 f4       	brne	.+2      	; 0xd6 <DIO_voidSetPinDir+0x2a>
  d4:	b9 c0       	rjmp	.+370    	; 0x248 <DIO_voidSetPinDir+0x19c>
  d6:	2c 81       	ldd	r18, Y+4	; 0x04
  d8:	3d 81       	ldd	r19, Y+5	; 0x05
  da:	25 34       	cpi	r18, 0x45	; 69
  dc:	31 05       	cpc	r19, r1
  de:	94 f4       	brge	.+36     	; 0x104 <DIO_voidSetPinDir+0x58>
  e0:	8c 81       	ldd	r24, Y+4	; 0x04
  e2:	9d 81       	ldd	r25, Y+5	; 0x05
  e4:	82 34       	cpi	r24, 0x42	; 66
  e6:	91 05       	cpc	r25, r1
  e8:	09 f4       	brne	.+2      	; 0xec <DIO_voidSetPinDir+0x40>
  ea:	56 c0       	rjmp	.+172    	; 0x198 <DIO_voidSetPinDir+0xec>
  ec:	2c 81       	ldd	r18, Y+4	; 0x04
  ee:	3d 81       	ldd	r19, Y+5	; 0x05
  f0:	23 34       	cpi	r18, 0x43	; 67
  f2:	31 05       	cpc	r19, r1
  f4:	0c f0       	brlt	.+2      	; 0xf8 <DIO_voidSetPinDir+0x4c>
  f6:	7c c0       	rjmp	.+248    	; 0x1f0 <DIO_voidSetPinDir+0x144>
  f8:	8c 81       	ldd	r24, Y+4	; 0x04
  fa:	9d 81       	ldd	r25, Y+5	; 0x05
  fc:	81 34       	cpi	r24, 0x41	; 65
  fe:	91 05       	cpc	r25, r1
 100:	f9 f0       	breq	.+62     	; 0x140 <DIO_voidSetPinDir+0x94>
 102:	cd c0       	rjmp	.+410    	; 0x29e <DIO_voidSetPinDir+0x1f2>
 104:	2c 81       	ldd	r18, Y+4	; 0x04
 106:	3d 81       	ldd	r19, Y+5	; 0x05
 108:	22 36       	cpi	r18, 0x62	; 98
 10a:	31 05       	cpc	r19, r1
 10c:	09 f4       	brne	.+2      	; 0x110 <DIO_voidSetPinDir+0x64>
 10e:	44 c0       	rjmp	.+136    	; 0x198 <DIO_voidSetPinDir+0xec>
 110:	8c 81       	ldd	r24, Y+4	; 0x04
 112:	9d 81       	ldd	r25, Y+5	; 0x05
 114:	83 36       	cpi	r24, 0x63	; 99
 116:	91 05       	cpc	r25, r1
 118:	34 f4       	brge	.+12     	; 0x126 <DIO_voidSetPinDir+0x7a>
 11a:	2c 81       	ldd	r18, Y+4	; 0x04
 11c:	3d 81       	ldd	r19, Y+5	; 0x05
 11e:	21 36       	cpi	r18, 0x61	; 97
 120:	31 05       	cpc	r19, r1
 122:	71 f0       	breq	.+28     	; 0x140 <DIO_voidSetPinDir+0x94>
 124:	bc c0       	rjmp	.+376    	; 0x29e <DIO_voidSetPinDir+0x1f2>
 126:	8c 81       	ldd	r24, Y+4	; 0x04
 128:	9d 81       	ldd	r25, Y+5	; 0x05
 12a:	83 36       	cpi	r24, 0x63	; 99
 12c:	91 05       	cpc	r25, r1
 12e:	09 f4       	brne	.+2      	; 0x132 <DIO_voidSetPinDir+0x86>
 130:	5f c0       	rjmp	.+190    	; 0x1f0 <DIO_voidSetPinDir+0x144>
 132:	2c 81       	ldd	r18, Y+4	; 0x04
 134:	3d 81       	ldd	r19, Y+5	; 0x05
 136:	24 36       	cpi	r18, 0x64	; 100
 138:	31 05       	cpc	r19, r1
 13a:	09 f4       	brne	.+2      	; 0x13e <DIO_voidSetPinDir+0x92>
 13c:	85 c0       	rjmp	.+266    	; 0x248 <DIO_voidSetPinDir+0x19c>
 13e:	af c0       	rjmp	.+350    	; 0x29e <DIO_voidSetPinDir+0x1f2>
		case'A':
		case'a':
			if(value == OUTPUT_PIN){
 140:	8b 81       	ldd	r24, Y+3	; 0x03
 142:	81 30       	cpi	r24, 0x01	; 1
 144:	a1 f4       	brne	.+40     	; 0x16e <DIO_voidSetPinDir+0xc2>

				SET_BIT( DDRA , PinNumber);
 146:	aa e3       	ldi	r26, 0x3A	; 58
 148:	b0 e0       	ldi	r27, 0x00	; 0
 14a:	ea e3       	ldi	r30, 0x3A	; 58
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	80 81       	ld	r24, Z
 150:	48 2f       	mov	r20, r24
 152:	8a 81       	ldd	r24, Y+2	; 0x02
 154:	28 2f       	mov	r18, r24
 156:	30 e0       	ldi	r19, 0x00	; 0
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	02 2e       	mov	r0, r18
 15e:	02 c0       	rjmp	.+4      	; 0x164 <DIO_voidSetPinDir+0xb8>
 160:	88 0f       	add	r24, r24
 162:	99 1f       	adc	r25, r25
 164:	0a 94       	dec	r0
 166:	e2 f7       	brpl	.-8      	; 0x160 <DIO_voidSetPinDir+0xb4>
 168:	84 2b       	or	r24, r20
 16a:	8c 93       	st	X, r24
 16c:	98 c0       	rjmp	.+304    	; 0x29e <DIO_voidSetPinDir+0x1f2>

			}
			else{

				CLR_BIT( DDRA , PinNumber);
 16e:	aa e3       	ldi	r26, 0x3A	; 58
 170:	b0 e0       	ldi	r27, 0x00	; 0
 172:	ea e3       	ldi	r30, 0x3A	; 58
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	80 81       	ld	r24, Z
 178:	48 2f       	mov	r20, r24
 17a:	8a 81       	ldd	r24, Y+2	; 0x02
 17c:	28 2f       	mov	r18, r24
 17e:	30 e0       	ldi	r19, 0x00	; 0
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 2e       	mov	r0, r18
 186:	02 c0       	rjmp	.+4      	; 0x18c <DIO_voidSetPinDir+0xe0>
 188:	88 0f       	add	r24, r24
 18a:	99 1f       	adc	r25, r25
 18c:	0a 94       	dec	r0
 18e:	e2 f7       	brpl	.-8      	; 0x188 <DIO_voidSetPinDir+0xdc>
 190:	80 95       	com	r24
 192:	84 23       	and	r24, r20
 194:	8c 93       	st	X, r24
 196:	83 c0       	rjmp	.+262    	; 0x29e <DIO_voidSetPinDir+0x1f2>

			}
		break;
		case'B':
		case'b':
			if(value == OUTPUT_PIN){
 198:	8b 81       	ldd	r24, Y+3	; 0x03
 19a:	81 30       	cpi	r24, 0x01	; 1
 19c:	a1 f4       	brne	.+40     	; 0x1c6 <DIO_voidSetPinDir+0x11a>

				SET_BIT( DDRB , PinNumber);
 19e:	a7 e3       	ldi	r26, 0x37	; 55
 1a0:	b0 e0       	ldi	r27, 0x00	; 0
 1a2:	e7 e3       	ldi	r30, 0x37	; 55
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	80 81       	ld	r24, Z
 1a8:	48 2f       	mov	r20, r24
 1aa:	8a 81       	ldd	r24, Y+2	; 0x02
 1ac:	28 2f       	mov	r18, r24
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	02 2e       	mov	r0, r18
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <DIO_voidSetPinDir+0x110>
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	0a 94       	dec	r0
 1be:	e2 f7       	brpl	.-8      	; 0x1b8 <DIO_voidSetPinDir+0x10c>
 1c0:	84 2b       	or	r24, r20
 1c2:	8c 93       	st	X, r24
 1c4:	6c c0       	rjmp	.+216    	; 0x29e <DIO_voidSetPinDir+0x1f2>

			}
			else{

				CLR_BIT( DDRB , PinNumber);
 1c6:	a7 e3       	ldi	r26, 0x37	; 55
 1c8:	b0 e0       	ldi	r27, 0x00	; 0
 1ca:	e7 e3       	ldi	r30, 0x37	; 55
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	80 81       	ld	r24, Z
 1d0:	48 2f       	mov	r20, r24
 1d2:	8a 81       	ldd	r24, Y+2	; 0x02
 1d4:	28 2f       	mov	r18, r24
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	02 2e       	mov	r0, r18
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <DIO_voidSetPinDir+0x138>
 1e0:	88 0f       	add	r24, r24
 1e2:	99 1f       	adc	r25, r25
 1e4:	0a 94       	dec	r0
 1e6:	e2 f7       	brpl	.-8      	; 0x1e0 <DIO_voidSetPinDir+0x134>
 1e8:	80 95       	com	r24
 1ea:	84 23       	and	r24, r20
 1ec:	8c 93       	st	X, r24
 1ee:	57 c0       	rjmp	.+174    	; 0x29e <DIO_voidSetPinDir+0x1f2>

			}
		break;
		case'C':
		case'c':
			if(value == OUTPUT_PIN){
 1f0:	8b 81       	ldd	r24, Y+3	; 0x03
 1f2:	81 30       	cpi	r24, 0x01	; 1
 1f4:	a1 f4       	brne	.+40     	; 0x21e <DIO_voidSetPinDir+0x172>

				SET_BIT( DDRC , PinNumber);
 1f6:	a4 e3       	ldi	r26, 0x34	; 52
 1f8:	b0 e0       	ldi	r27, 0x00	; 0
 1fa:	e4 e3       	ldi	r30, 0x34	; 52
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	48 2f       	mov	r20, r24
 202:	8a 81       	ldd	r24, Y+2	; 0x02
 204:	28 2f       	mov	r18, r24
 206:	30 e0       	ldi	r19, 0x00	; 0
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	02 2e       	mov	r0, r18
 20e:	02 c0       	rjmp	.+4      	; 0x214 <DIO_voidSetPinDir+0x168>
 210:	88 0f       	add	r24, r24
 212:	99 1f       	adc	r25, r25
 214:	0a 94       	dec	r0
 216:	e2 f7       	brpl	.-8      	; 0x210 <DIO_voidSetPinDir+0x164>
 218:	84 2b       	or	r24, r20
 21a:	8c 93       	st	X, r24
 21c:	40 c0       	rjmp	.+128    	; 0x29e <DIO_voidSetPinDir+0x1f2>

			}
			else{

				CLR_BIT( DDRC , PinNumber);
 21e:	a4 e3       	ldi	r26, 0x34	; 52
 220:	b0 e0       	ldi	r27, 0x00	; 0
 222:	e4 e3       	ldi	r30, 0x34	; 52
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	80 81       	ld	r24, Z
 228:	48 2f       	mov	r20, r24
 22a:	8a 81       	ldd	r24, Y+2	; 0x02
 22c:	28 2f       	mov	r18, r24
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 2e       	mov	r0, r18
 236:	02 c0       	rjmp	.+4      	; 0x23c <DIO_voidSetPinDir+0x190>
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	0a 94       	dec	r0
 23e:	e2 f7       	brpl	.-8      	; 0x238 <DIO_voidSetPinDir+0x18c>
 240:	80 95       	com	r24
 242:	84 23       	and	r24, r20
 244:	8c 93       	st	X, r24
 246:	2b c0       	rjmp	.+86     	; 0x29e <DIO_voidSetPinDir+0x1f2>

			}
		break;
		case'D':
		case'd':
			if(value == OUTPUT_PIN){
 248:	8b 81       	ldd	r24, Y+3	; 0x03
 24a:	81 30       	cpi	r24, 0x01	; 1
 24c:	a1 f4       	brne	.+40     	; 0x276 <DIO_voidSetPinDir+0x1ca>

				SET_BIT( DDRD , PinNumber);
 24e:	a1 e3       	ldi	r26, 0x31	; 49
 250:	b0 e0       	ldi	r27, 0x00	; 0
 252:	e1 e3       	ldi	r30, 0x31	; 49
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	48 2f       	mov	r20, r24
 25a:	8a 81       	ldd	r24, Y+2	; 0x02
 25c:	28 2f       	mov	r18, r24
 25e:	30 e0       	ldi	r19, 0x00	; 0
 260:	81 e0       	ldi	r24, 0x01	; 1
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	02 2e       	mov	r0, r18
 266:	02 c0       	rjmp	.+4      	; 0x26c <DIO_voidSetPinDir+0x1c0>
 268:	88 0f       	add	r24, r24
 26a:	99 1f       	adc	r25, r25
 26c:	0a 94       	dec	r0
 26e:	e2 f7       	brpl	.-8      	; 0x268 <DIO_voidSetPinDir+0x1bc>
 270:	84 2b       	or	r24, r20
 272:	8c 93       	st	X, r24
 274:	14 c0       	rjmp	.+40     	; 0x29e <DIO_voidSetPinDir+0x1f2>

			}
			else{

				CLR_BIT( DDRD , PinNumber);
 276:	a1 e3       	ldi	r26, 0x31	; 49
 278:	b0 e0       	ldi	r27, 0x00	; 0
 27a:	e1 e3       	ldi	r30, 0x31	; 49
 27c:	f0 e0       	ldi	r31, 0x00	; 0
 27e:	80 81       	ld	r24, Z
 280:	48 2f       	mov	r20, r24
 282:	8a 81       	ldd	r24, Y+2	; 0x02
 284:	28 2f       	mov	r18, r24
 286:	30 e0       	ldi	r19, 0x00	; 0
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	02 2e       	mov	r0, r18
 28e:	02 c0       	rjmp	.+4      	; 0x294 <DIO_voidSetPinDir+0x1e8>
 290:	88 0f       	add	r24, r24
 292:	99 1f       	adc	r25, r25
 294:	0a 94       	dec	r0
 296:	e2 f7       	brpl	.-8      	; 0x290 <DIO_voidSetPinDir+0x1e4>
 298:	80 95       	com	r24
 29a:	84 23       	and	r24, r20
 29c:	8c 93       	st	X, r24
		break;
		default:
			break;

	}
}
 29e:	0f 90       	pop	r0
 2a0:	0f 90       	pop	r0
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	0f 90       	pop	r0
 2a8:	cf 91       	pop	r28
 2aa:	df 91       	pop	r29
 2ac:	08 95       	ret

000002ae <DIO_voidWritePin>:
 * ARGUMENTS : uint8 PortName , uint8 PinNumber , uint8 value
 * DESCRIPTION : Used to write on specific pin from a specific port as logic high or low
 * RETURN : No return
 */

void DIO_voidWritePin(uint8 PortName , uint8 PinNumber , uint8 value){
 2ae:	df 93       	push	r29
 2b0:	cf 93       	push	r28
 2b2:	00 d0       	rcall	.+0      	; 0x2b4 <DIO_voidWritePin+0x6>
 2b4:	00 d0       	rcall	.+0      	; 0x2b6 <DIO_voidWritePin+0x8>
 2b6:	0f 92       	push	r0
 2b8:	cd b7       	in	r28, 0x3d	; 61
 2ba:	de b7       	in	r29, 0x3e	; 62
 2bc:	89 83       	std	Y+1, r24	; 0x01
 2be:	6a 83       	std	Y+2, r22	; 0x02
 2c0:	4b 83       	std	Y+3, r20	; 0x03
	switch(PortName){
 2c2:	89 81       	ldd	r24, Y+1	; 0x01
 2c4:	28 2f       	mov	r18, r24
 2c6:	30 e0       	ldi	r19, 0x00	; 0
 2c8:	3d 83       	std	Y+5, r19	; 0x05
 2ca:	2c 83       	std	Y+4, r18	; 0x04
 2cc:	8c 81       	ldd	r24, Y+4	; 0x04
 2ce:	9d 81       	ldd	r25, Y+5	; 0x05
 2d0:	84 34       	cpi	r24, 0x44	; 68
 2d2:	91 05       	cpc	r25, r1
 2d4:	09 f4       	brne	.+2      	; 0x2d8 <DIO_voidWritePin+0x2a>
 2d6:	b9 c0       	rjmp	.+370    	; 0x44a <DIO_voidWritePin+0x19c>
 2d8:	2c 81       	ldd	r18, Y+4	; 0x04
 2da:	3d 81       	ldd	r19, Y+5	; 0x05
 2dc:	25 34       	cpi	r18, 0x45	; 69
 2de:	31 05       	cpc	r19, r1
 2e0:	94 f4       	brge	.+36     	; 0x306 <DIO_voidWritePin+0x58>
 2e2:	8c 81       	ldd	r24, Y+4	; 0x04
 2e4:	9d 81       	ldd	r25, Y+5	; 0x05
 2e6:	82 34       	cpi	r24, 0x42	; 66
 2e8:	91 05       	cpc	r25, r1
 2ea:	09 f4       	brne	.+2      	; 0x2ee <DIO_voidWritePin+0x40>
 2ec:	56 c0       	rjmp	.+172    	; 0x39a <DIO_voidWritePin+0xec>
 2ee:	2c 81       	ldd	r18, Y+4	; 0x04
 2f0:	3d 81       	ldd	r19, Y+5	; 0x05
 2f2:	23 34       	cpi	r18, 0x43	; 67
 2f4:	31 05       	cpc	r19, r1
 2f6:	0c f0       	brlt	.+2      	; 0x2fa <DIO_voidWritePin+0x4c>
 2f8:	7c c0       	rjmp	.+248    	; 0x3f2 <DIO_voidWritePin+0x144>
 2fa:	8c 81       	ldd	r24, Y+4	; 0x04
 2fc:	9d 81       	ldd	r25, Y+5	; 0x05
 2fe:	81 34       	cpi	r24, 0x41	; 65
 300:	91 05       	cpc	r25, r1
 302:	f9 f0       	breq	.+62     	; 0x342 <DIO_voidWritePin+0x94>
 304:	cd c0       	rjmp	.+410    	; 0x4a0 <__stack+0x41>
 306:	2c 81       	ldd	r18, Y+4	; 0x04
 308:	3d 81       	ldd	r19, Y+5	; 0x05
 30a:	22 36       	cpi	r18, 0x62	; 98
 30c:	31 05       	cpc	r19, r1
 30e:	09 f4       	brne	.+2      	; 0x312 <DIO_voidWritePin+0x64>
 310:	44 c0       	rjmp	.+136    	; 0x39a <DIO_voidWritePin+0xec>
 312:	8c 81       	ldd	r24, Y+4	; 0x04
 314:	9d 81       	ldd	r25, Y+5	; 0x05
 316:	83 36       	cpi	r24, 0x63	; 99
 318:	91 05       	cpc	r25, r1
 31a:	34 f4       	brge	.+12     	; 0x328 <DIO_voidWritePin+0x7a>
 31c:	2c 81       	ldd	r18, Y+4	; 0x04
 31e:	3d 81       	ldd	r19, Y+5	; 0x05
 320:	21 36       	cpi	r18, 0x61	; 97
 322:	31 05       	cpc	r19, r1
 324:	71 f0       	breq	.+28     	; 0x342 <DIO_voidWritePin+0x94>
 326:	bc c0       	rjmp	.+376    	; 0x4a0 <__stack+0x41>
 328:	8c 81       	ldd	r24, Y+4	; 0x04
 32a:	9d 81       	ldd	r25, Y+5	; 0x05
 32c:	83 36       	cpi	r24, 0x63	; 99
 32e:	91 05       	cpc	r25, r1
 330:	09 f4       	brne	.+2      	; 0x334 <DIO_voidWritePin+0x86>
 332:	5f c0       	rjmp	.+190    	; 0x3f2 <DIO_voidWritePin+0x144>
 334:	2c 81       	ldd	r18, Y+4	; 0x04
 336:	3d 81       	ldd	r19, Y+5	; 0x05
 338:	24 36       	cpi	r18, 0x64	; 100
 33a:	31 05       	cpc	r19, r1
 33c:	09 f4       	brne	.+2      	; 0x340 <DIO_voidWritePin+0x92>
 33e:	85 c0       	rjmp	.+266    	; 0x44a <DIO_voidWritePin+0x19c>
 340:	af c0       	rjmp	.+350    	; 0x4a0 <__stack+0x41>
		case'A':
		case'a':
			if(value == HIGH){
 342:	8b 81       	ldd	r24, Y+3	; 0x03
 344:	81 30       	cpi	r24, 0x01	; 1
 346:	a1 f4       	brne	.+40     	; 0x370 <DIO_voidWritePin+0xc2>

				SET_BIT( PORTA , PinNumber);
 348:	ab e3       	ldi	r26, 0x3B	; 59
 34a:	b0 e0       	ldi	r27, 0x00	; 0
 34c:	eb e3       	ldi	r30, 0x3B	; 59
 34e:	f0 e0       	ldi	r31, 0x00	; 0
 350:	80 81       	ld	r24, Z
 352:	48 2f       	mov	r20, r24
 354:	8a 81       	ldd	r24, Y+2	; 0x02
 356:	28 2f       	mov	r18, r24
 358:	30 e0       	ldi	r19, 0x00	; 0
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	02 2e       	mov	r0, r18
 360:	02 c0       	rjmp	.+4      	; 0x366 <DIO_voidWritePin+0xb8>
 362:	88 0f       	add	r24, r24
 364:	99 1f       	adc	r25, r25
 366:	0a 94       	dec	r0
 368:	e2 f7       	brpl	.-8      	; 0x362 <DIO_voidWritePin+0xb4>
 36a:	84 2b       	or	r24, r20
 36c:	8c 93       	st	X, r24
 36e:	98 c0       	rjmp	.+304    	; 0x4a0 <__stack+0x41>

			}
			else{

				CLR_BIT( PORTA , PinNumber);
 370:	ab e3       	ldi	r26, 0x3B	; 59
 372:	b0 e0       	ldi	r27, 0x00	; 0
 374:	eb e3       	ldi	r30, 0x3B	; 59
 376:	f0 e0       	ldi	r31, 0x00	; 0
 378:	80 81       	ld	r24, Z
 37a:	48 2f       	mov	r20, r24
 37c:	8a 81       	ldd	r24, Y+2	; 0x02
 37e:	28 2f       	mov	r18, r24
 380:	30 e0       	ldi	r19, 0x00	; 0
 382:	81 e0       	ldi	r24, 0x01	; 1
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	02 2e       	mov	r0, r18
 388:	02 c0       	rjmp	.+4      	; 0x38e <DIO_voidWritePin+0xe0>
 38a:	88 0f       	add	r24, r24
 38c:	99 1f       	adc	r25, r25
 38e:	0a 94       	dec	r0
 390:	e2 f7       	brpl	.-8      	; 0x38a <DIO_voidWritePin+0xdc>
 392:	80 95       	com	r24
 394:	84 23       	and	r24, r20
 396:	8c 93       	st	X, r24
 398:	83 c0       	rjmp	.+262    	; 0x4a0 <__stack+0x41>

			}
		break;
		case'B':
		case'b':
			if(value == HIGH){
 39a:	8b 81       	ldd	r24, Y+3	; 0x03
 39c:	81 30       	cpi	r24, 0x01	; 1
 39e:	a1 f4       	brne	.+40     	; 0x3c8 <DIO_voidWritePin+0x11a>

				SET_BIT( PORTB , PinNumber);
 3a0:	a8 e3       	ldi	r26, 0x38	; 56
 3a2:	b0 e0       	ldi	r27, 0x00	; 0
 3a4:	e8 e3       	ldi	r30, 0x38	; 56
 3a6:	f0 e0       	ldi	r31, 0x00	; 0
 3a8:	80 81       	ld	r24, Z
 3aa:	48 2f       	mov	r20, r24
 3ac:	8a 81       	ldd	r24, Y+2	; 0x02
 3ae:	28 2f       	mov	r18, r24
 3b0:	30 e0       	ldi	r19, 0x00	; 0
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	02 2e       	mov	r0, r18
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <DIO_voidWritePin+0x110>
 3ba:	88 0f       	add	r24, r24
 3bc:	99 1f       	adc	r25, r25
 3be:	0a 94       	dec	r0
 3c0:	e2 f7       	brpl	.-8      	; 0x3ba <DIO_voidWritePin+0x10c>
 3c2:	84 2b       	or	r24, r20
 3c4:	8c 93       	st	X, r24
 3c6:	6c c0       	rjmp	.+216    	; 0x4a0 <__stack+0x41>

			}
			else{

				CLR_BIT( PORTB , PinNumber);
 3c8:	a8 e3       	ldi	r26, 0x38	; 56
 3ca:	b0 e0       	ldi	r27, 0x00	; 0
 3cc:	e8 e3       	ldi	r30, 0x38	; 56
 3ce:	f0 e0       	ldi	r31, 0x00	; 0
 3d0:	80 81       	ld	r24, Z
 3d2:	48 2f       	mov	r20, r24
 3d4:	8a 81       	ldd	r24, Y+2	; 0x02
 3d6:	28 2f       	mov	r18, r24
 3d8:	30 e0       	ldi	r19, 0x00	; 0
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	02 2e       	mov	r0, r18
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <DIO_voidWritePin+0x138>
 3e2:	88 0f       	add	r24, r24
 3e4:	99 1f       	adc	r25, r25
 3e6:	0a 94       	dec	r0
 3e8:	e2 f7       	brpl	.-8      	; 0x3e2 <DIO_voidWritePin+0x134>
 3ea:	80 95       	com	r24
 3ec:	84 23       	and	r24, r20
 3ee:	8c 93       	st	X, r24
 3f0:	57 c0       	rjmp	.+174    	; 0x4a0 <__stack+0x41>

			}
		break;
		case'C':
		case'c':
			if(value == HIGH){
 3f2:	8b 81       	ldd	r24, Y+3	; 0x03
 3f4:	81 30       	cpi	r24, 0x01	; 1
 3f6:	a1 f4       	brne	.+40     	; 0x420 <DIO_voidWritePin+0x172>

				SET_BIT( PORTC , PinNumber);
 3f8:	a5 e3       	ldi	r26, 0x35	; 53
 3fa:	b0 e0       	ldi	r27, 0x00	; 0
 3fc:	e5 e3       	ldi	r30, 0x35	; 53
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	80 81       	ld	r24, Z
 402:	48 2f       	mov	r20, r24
 404:	8a 81       	ldd	r24, Y+2	; 0x02
 406:	28 2f       	mov	r18, r24
 408:	30 e0       	ldi	r19, 0x00	; 0
 40a:	81 e0       	ldi	r24, 0x01	; 1
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	02 2e       	mov	r0, r18
 410:	02 c0       	rjmp	.+4      	; 0x416 <DIO_voidWritePin+0x168>
 412:	88 0f       	add	r24, r24
 414:	99 1f       	adc	r25, r25
 416:	0a 94       	dec	r0
 418:	e2 f7       	brpl	.-8      	; 0x412 <DIO_voidWritePin+0x164>
 41a:	84 2b       	or	r24, r20
 41c:	8c 93       	st	X, r24
 41e:	40 c0       	rjmp	.+128    	; 0x4a0 <__stack+0x41>

			}
			else{

				CLR_BIT( PORTC , PinNumber);
 420:	a5 e3       	ldi	r26, 0x35	; 53
 422:	b0 e0       	ldi	r27, 0x00	; 0
 424:	e5 e3       	ldi	r30, 0x35	; 53
 426:	f0 e0       	ldi	r31, 0x00	; 0
 428:	80 81       	ld	r24, Z
 42a:	48 2f       	mov	r20, r24
 42c:	8a 81       	ldd	r24, Y+2	; 0x02
 42e:	28 2f       	mov	r18, r24
 430:	30 e0       	ldi	r19, 0x00	; 0
 432:	81 e0       	ldi	r24, 0x01	; 1
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	02 2e       	mov	r0, r18
 438:	02 c0       	rjmp	.+4      	; 0x43e <DIO_voidWritePin+0x190>
 43a:	88 0f       	add	r24, r24
 43c:	99 1f       	adc	r25, r25
 43e:	0a 94       	dec	r0
 440:	e2 f7       	brpl	.-8      	; 0x43a <DIO_voidWritePin+0x18c>
 442:	80 95       	com	r24
 444:	84 23       	and	r24, r20
 446:	8c 93       	st	X, r24
 448:	2b c0       	rjmp	.+86     	; 0x4a0 <__stack+0x41>

			}
		break;
		case'D':
		case'd':
			if(value == HIGH){
 44a:	8b 81       	ldd	r24, Y+3	; 0x03
 44c:	81 30       	cpi	r24, 0x01	; 1
 44e:	a1 f4       	brne	.+40     	; 0x478 <__stack+0x19>

				SET_BIT( PORTD , PinNumber);
 450:	a2 e3       	ldi	r26, 0x32	; 50
 452:	b0 e0       	ldi	r27, 0x00	; 0
 454:	e2 e3       	ldi	r30, 0x32	; 50
 456:	f0 e0       	ldi	r31, 0x00	; 0
 458:	80 81       	ld	r24, Z
 45a:	48 2f       	mov	r20, r24
 45c:	8a 81       	ldd	r24, Y+2	; 0x02
 45e:	28 2f       	mov	r18, r24
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	02 2e       	mov	r0, r18
 468:	02 c0       	rjmp	.+4      	; 0x46e <__stack+0xf>
 46a:	88 0f       	add	r24, r24
 46c:	99 1f       	adc	r25, r25
 46e:	0a 94       	dec	r0
 470:	e2 f7       	brpl	.-8      	; 0x46a <__stack+0xb>
 472:	84 2b       	or	r24, r20
 474:	8c 93       	st	X, r24
 476:	14 c0       	rjmp	.+40     	; 0x4a0 <__stack+0x41>

			}
			else{

				CLR_BIT( PORTD , PinNumber);
 478:	a2 e3       	ldi	r26, 0x32	; 50
 47a:	b0 e0       	ldi	r27, 0x00	; 0
 47c:	e2 e3       	ldi	r30, 0x32	; 50
 47e:	f0 e0       	ldi	r31, 0x00	; 0
 480:	80 81       	ld	r24, Z
 482:	48 2f       	mov	r20, r24
 484:	8a 81       	ldd	r24, Y+2	; 0x02
 486:	28 2f       	mov	r18, r24
 488:	30 e0       	ldi	r19, 0x00	; 0
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	02 2e       	mov	r0, r18
 490:	02 c0       	rjmp	.+4      	; 0x496 <__stack+0x37>
 492:	88 0f       	add	r24, r24
 494:	99 1f       	adc	r25, r25
 496:	0a 94       	dec	r0
 498:	e2 f7       	brpl	.-8      	; 0x492 <__stack+0x33>
 49a:	80 95       	com	r24
 49c:	84 23       	and	r24, r20
 49e:	8c 93       	st	X, r24
		break;
		default:
		break;

	}
}
 4a0:	0f 90       	pop	r0
 4a2:	0f 90       	pop	r0
 4a4:	0f 90       	pop	r0
 4a6:	0f 90       	pop	r0
 4a8:	0f 90       	pop	r0
 4aa:	cf 91       	pop	r28
 4ac:	df 91       	pop	r29
 4ae:	08 95       	ret

000004b0 <DIO_u8ReadPin>:
 * DESCRIPTION : Used to read specific pin from a specific port
 * RETURN : Reading of the pin
 */


uint8 DIO_u8ReadPin(uint8 PortName , uint8 PinNumber){
 4b0:	df 93       	push	r29
 4b2:	cf 93       	push	r28
 4b4:	00 d0       	rcall	.+0      	; 0x4b6 <DIO_u8ReadPin+0x6>
 4b6:	00 d0       	rcall	.+0      	; 0x4b8 <DIO_u8ReadPin+0x8>
 4b8:	0f 92       	push	r0
 4ba:	cd b7       	in	r28, 0x3d	; 61
 4bc:	de b7       	in	r29, 0x3e	; 62
 4be:	8a 83       	std	Y+2, r24	; 0x02
 4c0:	6b 83       	std	Y+3, r22	; 0x03
	uint8 value;
	switch(PortName){
 4c2:	8a 81       	ldd	r24, Y+2	; 0x02
 4c4:	28 2f       	mov	r18, r24
 4c6:	30 e0       	ldi	r19, 0x00	; 0
 4c8:	3d 83       	std	Y+5, r19	; 0x05
 4ca:	2c 83       	std	Y+4, r18	; 0x04
 4cc:	4c 81       	ldd	r20, Y+4	; 0x04
 4ce:	5d 81       	ldd	r21, Y+5	; 0x05
 4d0:	44 34       	cpi	r20, 0x44	; 68
 4d2:	51 05       	cpc	r21, r1
 4d4:	09 f4       	brne	.+2      	; 0x4d8 <DIO_u8ReadPin+0x28>
 4d6:	8e c0       	rjmp	.+284    	; 0x5f4 <DIO_u8ReadPin+0x144>
 4d8:	8c 81       	ldd	r24, Y+4	; 0x04
 4da:	9d 81       	ldd	r25, Y+5	; 0x05
 4dc:	85 34       	cpi	r24, 0x45	; 69
 4de:	91 05       	cpc	r25, r1
 4e0:	94 f4       	brge	.+36     	; 0x506 <DIO_u8ReadPin+0x56>
 4e2:	2c 81       	ldd	r18, Y+4	; 0x04
 4e4:	3d 81       	ldd	r19, Y+5	; 0x05
 4e6:	22 34       	cpi	r18, 0x42	; 66
 4e8:	31 05       	cpc	r19, r1
 4ea:	09 f4       	brne	.+2      	; 0x4ee <DIO_u8ReadPin+0x3e>
 4ec:	47 c0       	rjmp	.+142    	; 0x57c <DIO_u8ReadPin+0xcc>
 4ee:	4c 81       	ldd	r20, Y+4	; 0x04
 4f0:	5d 81       	ldd	r21, Y+5	; 0x05
 4f2:	43 34       	cpi	r20, 0x43	; 67
 4f4:	51 05       	cpc	r21, r1
 4f6:	0c f0       	brlt	.+2      	; 0x4fa <DIO_u8ReadPin+0x4a>
 4f8:	5f c0       	rjmp	.+190    	; 0x5b8 <DIO_u8ReadPin+0x108>
 4fa:	8c 81       	ldd	r24, Y+4	; 0x04
 4fc:	9d 81       	ldd	r25, Y+5	; 0x05
 4fe:	81 34       	cpi	r24, 0x41	; 65
 500:	91 05       	cpc	r25, r1
 502:	f1 f0       	breq	.+60     	; 0x540 <DIO_u8ReadPin+0x90>
 504:	94 c0       	rjmp	.+296    	; 0x62e <DIO_u8ReadPin+0x17e>
 506:	2c 81       	ldd	r18, Y+4	; 0x04
 508:	3d 81       	ldd	r19, Y+5	; 0x05
 50a:	22 36       	cpi	r18, 0x62	; 98
 50c:	31 05       	cpc	r19, r1
 50e:	b1 f1       	breq	.+108    	; 0x57c <DIO_u8ReadPin+0xcc>
 510:	4c 81       	ldd	r20, Y+4	; 0x04
 512:	5d 81       	ldd	r21, Y+5	; 0x05
 514:	43 36       	cpi	r20, 0x63	; 99
 516:	51 05       	cpc	r21, r1
 518:	34 f4       	brge	.+12     	; 0x526 <DIO_u8ReadPin+0x76>
 51a:	8c 81       	ldd	r24, Y+4	; 0x04
 51c:	9d 81       	ldd	r25, Y+5	; 0x05
 51e:	81 36       	cpi	r24, 0x61	; 97
 520:	91 05       	cpc	r25, r1
 522:	71 f0       	breq	.+28     	; 0x540 <DIO_u8ReadPin+0x90>
 524:	84 c0       	rjmp	.+264    	; 0x62e <DIO_u8ReadPin+0x17e>
 526:	2c 81       	ldd	r18, Y+4	; 0x04
 528:	3d 81       	ldd	r19, Y+5	; 0x05
 52a:	23 36       	cpi	r18, 0x63	; 99
 52c:	31 05       	cpc	r19, r1
 52e:	09 f4       	brne	.+2      	; 0x532 <DIO_u8ReadPin+0x82>
 530:	43 c0       	rjmp	.+134    	; 0x5b8 <DIO_u8ReadPin+0x108>
 532:	4c 81       	ldd	r20, Y+4	; 0x04
 534:	5d 81       	ldd	r21, Y+5	; 0x05
 536:	44 36       	cpi	r20, 0x64	; 100
 538:	51 05       	cpc	r21, r1
 53a:	09 f4       	brne	.+2      	; 0x53e <DIO_u8ReadPin+0x8e>
 53c:	5b c0       	rjmp	.+182    	; 0x5f4 <DIO_u8ReadPin+0x144>
 53e:	77 c0       	rjmp	.+238    	; 0x62e <DIO_u8ReadPin+0x17e>
		case'A':
		case'a':
			value=READ_BIT(PINA , PinNumber);
 540:	e9 e3       	ldi	r30, 0x39	; 57
 542:	f0 e0       	ldi	r31, 0x00	; 0
 544:	80 81       	ld	r24, Z
 546:	48 2f       	mov	r20, r24
 548:	50 e0       	ldi	r21, 0x00	; 0
 54a:	8b 81       	ldd	r24, Y+3	; 0x03
 54c:	28 2f       	mov	r18, r24
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	81 e0       	ldi	r24, 0x01	; 1
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	02 c0       	rjmp	.+4      	; 0x55a <DIO_u8ReadPin+0xaa>
 556:	88 0f       	add	r24, r24
 558:	99 1f       	adc	r25, r25
 55a:	2a 95       	dec	r18
 55c:	e2 f7       	brpl	.-8      	; 0x556 <DIO_u8ReadPin+0xa6>
 55e:	9a 01       	movw	r18, r20
 560:	28 23       	and	r18, r24
 562:	39 23       	and	r19, r25
 564:	8b 81       	ldd	r24, Y+3	; 0x03
 566:	88 2f       	mov	r24, r24
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	a9 01       	movw	r20, r18
 56c:	02 c0       	rjmp	.+4      	; 0x572 <DIO_u8ReadPin+0xc2>
 56e:	55 95       	asr	r21
 570:	47 95       	ror	r20
 572:	8a 95       	dec	r24
 574:	e2 f7       	brpl	.-8      	; 0x56e <DIO_u8ReadPin+0xbe>
 576:	ca 01       	movw	r24, r20
 578:	89 83       	std	Y+1, r24	; 0x01
 57a:	59 c0       	rjmp	.+178    	; 0x62e <DIO_u8ReadPin+0x17e>
		break;
		case'B':
		case'b':
			value=READ_BIT(PINB , PinNumber);
 57c:	e6 e3       	ldi	r30, 0x36	; 54
 57e:	f0 e0       	ldi	r31, 0x00	; 0
 580:	80 81       	ld	r24, Z
 582:	48 2f       	mov	r20, r24
 584:	50 e0       	ldi	r21, 0x00	; 0
 586:	8b 81       	ldd	r24, Y+3	; 0x03
 588:	28 2f       	mov	r18, r24
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	81 e0       	ldi	r24, 0x01	; 1
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	02 c0       	rjmp	.+4      	; 0x596 <DIO_u8ReadPin+0xe6>
 592:	88 0f       	add	r24, r24
 594:	99 1f       	adc	r25, r25
 596:	2a 95       	dec	r18
 598:	e2 f7       	brpl	.-8      	; 0x592 <DIO_u8ReadPin+0xe2>
 59a:	9a 01       	movw	r18, r20
 59c:	28 23       	and	r18, r24
 59e:	39 23       	and	r19, r25
 5a0:	8b 81       	ldd	r24, Y+3	; 0x03
 5a2:	88 2f       	mov	r24, r24
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	a9 01       	movw	r20, r18
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <DIO_u8ReadPin+0xfe>
 5aa:	55 95       	asr	r21
 5ac:	47 95       	ror	r20
 5ae:	8a 95       	dec	r24
 5b0:	e2 f7       	brpl	.-8      	; 0x5aa <DIO_u8ReadPin+0xfa>
 5b2:	ca 01       	movw	r24, r20
 5b4:	89 83       	std	Y+1, r24	; 0x01
 5b6:	3b c0       	rjmp	.+118    	; 0x62e <DIO_u8ReadPin+0x17e>

		break;
		case'C':
		case'c':
			value=READ_BIT(PINC , PinNumber);
 5b8:	e3 e3       	ldi	r30, 0x33	; 51
 5ba:	f0 e0       	ldi	r31, 0x00	; 0
 5bc:	80 81       	ld	r24, Z
 5be:	48 2f       	mov	r20, r24
 5c0:	50 e0       	ldi	r21, 0x00	; 0
 5c2:	8b 81       	ldd	r24, Y+3	; 0x03
 5c4:	28 2f       	mov	r18, r24
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	81 e0       	ldi	r24, 0x01	; 1
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <DIO_u8ReadPin+0x122>
 5ce:	88 0f       	add	r24, r24
 5d0:	99 1f       	adc	r25, r25
 5d2:	2a 95       	dec	r18
 5d4:	e2 f7       	brpl	.-8      	; 0x5ce <DIO_u8ReadPin+0x11e>
 5d6:	9a 01       	movw	r18, r20
 5d8:	28 23       	and	r18, r24
 5da:	39 23       	and	r19, r25
 5dc:	8b 81       	ldd	r24, Y+3	; 0x03
 5de:	88 2f       	mov	r24, r24
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	a9 01       	movw	r20, r18
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <DIO_u8ReadPin+0x13a>
 5e6:	55 95       	asr	r21
 5e8:	47 95       	ror	r20
 5ea:	8a 95       	dec	r24
 5ec:	e2 f7       	brpl	.-8      	; 0x5e6 <DIO_u8ReadPin+0x136>
 5ee:	ca 01       	movw	r24, r20
 5f0:	89 83       	std	Y+1, r24	; 0x01
 5f2:	1d c0       	rjmp	.+58     	; 0x62e <DIO_u8ReadPin+0x17e>

		break;
		case'D':
		case'd':
			value=READ_BIT(PIND , PinNumber);
 5f4:	e0 e3       	ldi	r30, 0x30	; 48
 5f6:	f0 e0       	ldi	r31, 0x00	; 0
 5f8:	80 81       	ld	r24, Z
 5fa:	48 2f       	mov	r20, r24
 5fc:	50 e0       	ldi	r21, 0x00	; 0
 5fe:	8b 81       	ldd	r24, Y+3	; 0x03
 600:	28 2f       	mov	r18, r24
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	81 e0       	ldi	r24, 0x01	; 1
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	02 c0       	rjmp	.+4      	; 0x60e <DIO_u8ReadPin+0x15e>
 60a:	88 0f       	add	r24, r24
 60c:	99 1f       	adc	r25, r25
 60e:	2a 95       	dec	r18
 610:	e2 f7       	brpl	.-8      	; 0x60a <DIO_u8ReadPin+0x15a>
 612:	9a 01       	movw	r18, r20
 614:	28 23       	and	r18, r24
 616:	39 23       	and	r19, r25
 618:	8b 81       	ldd	r24, Y+3	; 0x03
 61a:	88 2f       	mov	r24, r24
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	a9 01       	movw	r20, r18
 620:	02 c0       	rjmp	.+4      	; 0x626 <DIO_u8ReadPin+0x176>
 622:	55 95       	asr	r21
 624:	47 95       	ror	r20
 626:	8a 95       	dec	r24
 628:	e2 f7       	brpl	.-8      	; 0x622 <DIO_u8ReadPin+0x172>
 62a:	ca 01       	movw	r24, r20
 62c:	89 83       	std	Y+1, r24	; 0x01
		break;
		default:
		break;

	}
	return value;
 62e:	89 81       	ldd	r24, Y+1	; 0x01
}
 630:	0f 90       	pop	r0
 632:	0f 90       	pop	r0
 634:	0f 90       	pop	r0
 636:	0f 90       	pop	r0
 638:	0f 90       	pop	r0
 63a:	cf 91       	pop	r28
 63c:	df 91       	pop	r29
 63e:	08 95       	ret

00000640 <DIO_voidTogglePin>:
 * FUNCTION NAME : DIO_voidTogglePin
 * ARGUMENTS : uint8 PortName , uint8 PinNumber
 * DESCRIPTION : Used to toggle specific pin from a specific port
 * RETURN : No return
 */
void DIO_voidTogglePin(uint8 PortName , uint8 PinNumber){
 640:	df 93       	push	r29
 642:	cf 93       	push	r28
 644:	00 d0       	rcall	.+0      	; 0x646 <DIO_voidTogglePin+0x6>
 646:	00 d0       	rcall	.+0      	; 0x648 <DIO_voidTogglePin+0x8>
 648:	cd b7       	in	r28, 0x3d	; 61
 64a:	de b7       	in	r29, 0x3e	; 62
 64c:	89 83       	std	Y+1, r24	; 0x01
 64e:	6a 83       	std	Y+2, r22	; 0x02
	switch(PortName){
 650:	89 81       	ldd	r24, Y+1	; 0x01
 652:	28 2f       	mov	r18, r24
 654:	30 e0       	ldi	r19, 0x00	; 0
 656:	3c 83       	std	Y+4, r19	; 0x04
 658:	2b 83       	std	Y+3, r18	; 0x03
 65a:	8b 81       	ldd	r24, Y+3	; 0x03
 65c:	9c 81       	ldd	r25, Y+4	; 0x04
 65e:	84 34       	cpi	r24, 0x44	; 68
 660:	91 05       	cpc	r25, r1
 662:	09 f4       	brne	.+2      	; 0x666 <DIO_voidTogglePin+0x26>
 664:	6d c0       	rjmp	.+218    	; 0x740 <DIO_voidTogglePin+0x100>
 666:	2b 81       	ldd	r18, Y+3	; 0x03
 668:	3c 81       	ldd	r19, Y+4	; 0x04
 66a:	25 34       	cpi	r18, 0x45	; 69
 66c:	31 05       	cpc	r19, r1
 66e:	8c f4       	brge	.+34     	; 0x692 <DIO_voidTogglePin+0x52>
 670:	8b 81       	ldd	r24, Y+3	; 0x03
 672:	9c 81       	ldd	r25, Y+4	; 0x04
 674:	82 34       	cpi	r24, 0x42	; 66
 676:	91 05       	cpc	r25, r1
 678:	d9 f1       	breq	.+118    	; 0x6f0 <DIO_voidTogglePin+0xb0>
 67a:	2b 81       	ldd	r18, Y+3	; 0x03
 67c:	3c 81       	ldd	r19, Y+4	; 0x04
 67e:	23 34       	cpi	r18, 0x43	; 67
 680:	31 05       	cpc	r19, r1
 682:	0c f0       	brlt	.+2      	; 0x686 <DIO_voidTogglePin+0x46>
 684:	49 c0       	rjmp	.+146    	; 0x718 <DIO_voidTogglePin+0xd8>
 686:	8b 81       	ldd	r24, Y+3	; 0x03
 688:	9c 81       	ldd	r25, Y+4	; 0x04
 68a:	81 34       	cpi	r24, 0x41	; 65
 68c:	91 05       	cpc	r25, r1
 68e:	e1 f0       	breq	.+56     	; 0x6c8 <DIO_voidTogglePin+0x88>
 690:	6a c0       	rjmp	.+212    	; 0x766 <DIO_voidTogglePin+0x126>
 692:	2b 81       	ldd	r18, Y+3	; 0x03
 694:	3c 81       	ldd	r19, Y+4	; 0x04
 696:	22 36       	cpi	r18, 0x62	; 98
 698:	31 05       	cpc	r19, r1
 69a:	51 f1       	breq	.+84     	; 0x6f0 <DIO_voidTogglePin+0xb0>
 69c:	8b 81       	ldd	r24, Y+3	; 0x03
 69e:	9c 81       	ldd	r25, Y+4	; 0x04
 6a0:	83 36       	cpi	r24, 0x63	; 99
 6a2:	91 05       	cpc	r25, r1
 6a4:	34 f4       	brge	.+12     	; 0x6b2 <DIO_voidTogglePin+0x72>
 6a6:	2b 81       	ldd	r18, Y+3	; 0x03
 6a8:	3c 81       	ldd	r19, Y+4	; 0x04
 6aa:	21 36       	cpi	r18, 0x61	; 97
 6ac:	31 05       	cpc	r19, r1
 6ae:	61 f0       	breq	.+24     	; 0x6c8 <DIO_voidTogglePin+0x88>
 6b0:	5a c0       	rjmp	.+180    	; 0x766 <DIO_voidTogglePin+0x126>
 6b2:	8b 81       	ldd	r24, Y+3	; 0x03
 6b4:	9c 81       	ldd	r25, Y+4	; 0x04
 6b6:	83 36       	cpi	r24, 0x63	; 99
 6b8:	91 05       	cpc	r25, r1
 6ba:	71 f1       	breq	.+92     	; 0x718 <DIO_voidTogglePin+0xd8>
 6bc:	2b 81       	ldd	r18, Y+3	; 0x03
 6be:	3c 81       	ldd	r19, Y+4	; 0x04
 6c0:	24 36       	cpi	r18, 0x64	; 100
 6c2:	31 05       	cpc	r19, r1
 6c4:	e9 f1       	breq	.+122    	; 0x740 <DIO_voidTogglePin+0x100>
 6c6:	4f c0       	rjmp	.+158    	; 0x766 <DIO_voidTogglePin+0x126>
		case'A':
		case'a':
			TOG_BIT(PORTA , PinNumber);
 6c8:	ab e3       	ldi	r26, 0x3B	; 59
 6ca:	b0 e0       	ldi	r27, 0x00	; 0
 6cc:	eb e3       	ldi	r30, 0x3B	; 59
 6ce:	f0 e0       	ldi	r31, 0x00	; 0
 6d0:	80 81       	ld	r24, Z
 6d2:	48 2f       	mov	r20, r24
 6d4:	8a 81       	ldd	r24, Y+2	; 0x02
 6d6:	28 2f       	mov	r18, r24
 6d8:	30 e0       	ldi	r19, 0x00	; 0
 6da:	81 e0       	ldi	r24, 0x01	; 1
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	02 2e       	mov	r0, r18
 6e0:	02 c0       	rjmp	.+4      	; 0x6e6 <DIO_voidTogglePin+0xa6>
 6e2:	88 0f       	add	r24, r24
 6e4:	99 1f       	adc	r25, r25
 6e6:	0a 94       	dec	r0
 6e8:	e2 f7       	brpl	.-8      	; 0x6e2 <DIO_voidTogglePin+0xa2>
 6ea:	84 27       	eor	r24, r20
 6ec:	8c 93       	st	X, r24
 6ee:	3b c0       	rjmp	.+118    	; 0x766 <DIO_voidTogglePin+0x126>
		break;
		case'B':
		case'b':
			TOG_BIT(PORTB , PinNumber);
 6f0:	a8 e3       	ldi	r26, 0x38	; 56
 6f2:	b0 e0       	ldi	r27, 0x00	; 0
 6f4:	e8 e3       	ldi	r30, 0x38	; 56
 6f6:	f0 e0       	ldi	r31, 0x00	; 0
 6f8:	80 81       	ld	r24, Z
 6fa:	48 2f       	mov	r20, r24
 6fc:	8a 81       	ldd	r24, Y+2	; 0x02
 6fe:	28 2f       	mov	r18, r24
 700:	30 e0       	ldi	r19, 0x00	; 0
 702:	81 e0       	ldi	r24, 0x01	; 1
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	02 2e       	mov	r0, r18
 708:	02 c0       	rjmp	.+4      	; 0x70e <DIO_voidTogglePin+0xce>
 70a:	88 0f       	add	r24, r24
 70c:	99 1f       	adc	r25, r25
 70e:	0a 94       	dec	r0
 710:	e2 f7       	brpl	.-8      	; 0x70a <DIO_voidTogglePin+0xca>
 712:	84 27       	eor	r24, r20
 714:	8c 93       	st	X, r24
 716:	27 c0       	rjmp	.+78     	; 0x766 <DIO_voidTogglePin+0x126>

		break;
		case'C':
		case'c':
			TOG_BIT(PORTC , PinNumber);
 718:	a5 e3       	ldi	r26, 0x35	; 53
 71a:	b0 e0       	ldi	r27, 0x00	; 0
 71c:	e5 e3       	ldi	r30, 0x35	; 53
 71e:	f0 e0       	ldi	r31, 0x00	; 0
 720:	80 81       	ld	r24, Z
 722:	48 2f       	mov	r20, r24
 724:	8a 81       	ldd	r24, Y+2	; 0x02
 726:	28 2f       	mov	r18, r24
 728:	30 e0       	ldi	r19, 0x00	; 0
 72a:	81 e0       	ldi	r24, 0x01	; 1
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	02 2e       	mov	r0, r18
 730:	02 c0       	rjmp	.+4      	; 0x736 <DIO_voidTogglePin+0xf6>
 732:	88 0f       	add	r24, r24
 734:	99 1f       	adc	r25, r25
 736:	0a 94       	dec	r0
 738:	e2 f7       	brpl	.-8      	; 0x732 <DIO_voidTogglePin+0xf2>
 73a:	84 27       	eor	r24, r20
 73c:	8c 93       	st	X, r24
 73e:	13 c0       	rjmp	.+38     	; 0x766 <DIO_voidTogglePin+0x126>

		break;
		case'D':
		case'd':
			TOG_BIT(PORTD , PinNumber);
 740:	a2 e3       	ldi	r26, 0x32	; 50
 742:	b0 e0       	ldi	r27, 0x00	; 0
 744:	e2 e3       	ldi	r30, 0x32	; 50
 746:	f0 e0       	ldi	r31, 0x00	; 0
 748:	80 81       	ld	r24, Z
 74a:	48 2f       	mov	r20, r24
 74c:	8a 81       	ldd	r24, Y+2	; 0x02
 74e:	28 2f       	mov	r18, r24
 750:	30 e0       	ldi	r19, 0x00	; 0
 752:	81 e0       	ldi	r24, 0x01	; 1
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	02 2e       	mov	r0, r18
 758:	02 c0       	rjmp	.+4      	; 0x75e <DIO_voidTogglePin+0x11e>
 75a:	88 0f       	add	r24, r24
 75c:	99 1f       	adc	r25, r25
 75e:	0a 94       	dec	r0
 760:	e2 f7       	brpl	.-8      	; 0x75a <DIO_voidTogglePin+0x11a>
 762:	84 27       	eor	r24, r20
 764:	8c 93       	st	X, r24
		break;
		default:
		break;

	}
}
 766:	0f 90       	pop	r0
 768:	0f 90       	pop	r0
 76a:	0f 90       	pop	r0
 76c:	0f 90       	pop	r0
 76e:	cf 91       	pop	r28
 770:	df 91       	pop	r29
 772:	08 95       	ret

00000774 <DIO_voidSetPortDir>:
 * ARGUMENTS : uint8 PortName , uint8 value
 * DESCRIPTION : Used to set  specific port as input or output
 * RETURN : No return
 */

void DIO_voidSetPortDir(uint8 PortName , uint8 value){
 774:	df 93       	push	r29
 776:	cf 93       	push	r28
 778:	00 d0       	rcall	.+0      	; 0x77a <DIO_voidSetPortDir+0x6>
 77a:	00 d0       	rcall	.+0      	; 0x77c <DIO_voidSetPortDir+0x8>
 77c:	cd b7       	in	r28, 0x3d	; 61
 77e:	de b7       	in	r29, 0x3e	; 62
 780:	89 83       	std	Y+1, r24	; 0x01
 782:	6a 83       	std	Y+2, r22	; 0x02
	switch(PortName){
 784:	89 81       	ldd	r24, Y+1	; 0x01
 786:	28 2f       	mov	r18, r24
 788:	30 e0       	ldi	r19, 0x00	; 0
 78a:	3c 83       	std	Y+4, r19	; 0x04
 78c:	2b 83       	std	Y+3, r18	; 0x03
 78e:	8b 81       	ldd	r24, Y+3	; 0x03
 790:	9c 81       	ldd	r25, Y+4	; 0x04
 792:	84 34       	cpi	r24, 0x44	; 68
 794:	91 05       	cpc	r25, r1
 796:	09 f4       	brne	.+2      	; 0x79a <DIO_voidSetPortDir+0x26>
 798:	3f c0       	rjmp	.+126    	; 0x818 <DIO_voidSetPortDir+0xa4>
 79a:	2b 81       	ldd	r18, Y+3	; 0x03
 79c:	3c 81       	ldd	r19, Y+4	; 0x04
 79e:	25 34       	cpi	r18, 0x45	; 69
 7a0:	31 05       	cpc	r19, r1
 7a2:	84 f4       	brge	.+32     	; 0x7c4 <DIO_voidSetPortDir+0x50>
 7a4:	8b 81       	ldd	r24, Y+3	; 0x03
 7a6:	9c 81       	ldd	r25, Y+4	; 0x04
 7a8:	82 34       	cpi	r24, 0x42	; 66
 7aa:	91 05       	cpc	r25, r1
 7ac:	59 f1       	breq	.+86     	; 0x804 <DIO_voidSetPortDir+0x90>
 7ae:	2b 81       	ldd	r18, Y+3	; 0x03
 7b0:	3c 81       	ldd	r19, Y+4	; 0x04
 7b2:	23 34       	cpi	r18, 0x43	; 67
 7b4:	31 05       	cpc	r19, r1
 7b6:	5c f5       	brge	.+86     	; 0x80e <DIO_voidSetPortDir+0x9a>
 7b8:	8b 81       	ldd	r24, Y+3	; 0x03
 7ba:	9c 81       	ldd	r25, Y+4	; 0x04
 7bc:	81 34       	cpi	r24, 0x41	; 65
 7be:	91 05       	cpc	r25, r1
 7c0:	e1 f0       	breq	.+56     	; 0x7fa <DIO_voidSetPortDir+0x86>
 7c2:	2e c0       	rjmp	.+92     	; 0x820 <DIO_voidSetPortDir+0xac>
 7c4:	2b 81       	ldd	r18, Y+3	; 0x03
 7c6:	3c 81       	ldd	r19, Y+4	; 0x04
 7c8:	22 36       	cpi	r18, 0x62	; 98
 7ca:	31 05       	cpc	r19, r1
 7cc:	d9 f0       	breq	.+54     	; 0x804 <DIO_voidSetPortDir+0x90>
 7ce:	8b 81       	ldd	r24, Y+3	; 0x03
 7d0:	9c 81       	ldd	r25, Y+4	; 0x04
 7d2:	83 36       	cpi	r24, 0x63	; 99
 7d4:	91 05       	cpc	r25, r1
 7d6:	34 f4       	brge	.+12     	; 0x7e4 <DIO_voidSetPortDir+0x70>
 7d8:	2b 81       	ldd	r18, Y+3	; 0x03
 7da:	3c 81       	ldd	r19, Y+4	; 0x04
 7dc:	21 36       	cpi	r18, 0x61	; 97
 7de:	31 05       	cpc	r19, r1
 7e0:	61 f0       	breq	.+24     	; 0x7fa <DIO_voidSetPortDir+0x86>
 7e2:	1e c0       	rjmp	.+60     	; 0x820 <DIO_voidSetPortDir+0xac>
 7e4:	8b 81       	ldd	r24, Y+3	; 0x03
 7e6:	9c 81       	ldd	r25, Y+4	; 0x04
 7e8:	83 36       	cpi	r24, 0x63	; 99
 7ea:	91 05       	cpc	r25, r1
 7ec:	81 f0       	breq	.+32     	; 0x80e <DIO_voidSetPortDir+0x9a>
 7ee:	2b 81       	ldd	r18, Y+3	; 0x03
 7f0:	3c 81       	ldd	r19, Y+4	; 0x04
 7f2:	24 36       	cpi	r18, 0x64	; 100
 7f4:	31 05       	cpc	r19, r1
 7f6:	81 f0       	breq	.+32     	; 0x818 <DIO_voidSetPortDir+0xa4>
 7f8:	13 c0       	rjmp	.+38     	; 0x820 <DIO_voidSetPortDir+0xac>
		case'A':
		case'a':

			DDRA=value;
 7fa:	ea e3       	ldi	r30, 0x3A	; 58
 7fc:	f0 e0       	ldi	r31, 0x00	; 0
 7fe:	8a 81       	ldd	r24, Y+2	; 0x02
 800:	80 83       	st	Z, r24
 802:	0e c0       	rjmp	.+28     	; 0x820 <DIO_voidSetPortDir+0xac>
		break;

		case'B':
		case'b':

			DDRB=value;
 804:	e7 e3       	ldi	r30, 0x37	; 55
 806:	f0 e0       	ldi	r31, 0x00	; 0
 808:	8a 81       	ldd	r24, Y+2	; 0x02
 80a:	80 83       	st	Z, r24
 80c:	09 c0       	rjmp	.+18     	; 0x820 <DIO_voidSetPortDir+0xac>
		break;

		case'C':
		case'c':

			DDRC=value;
 80e:	e4 e3       	ldi	r30, 0x34	; 52
 810:	f0 e0       	ldi	r31, 0x00	; 0
 812:	8a 81       	ldd	r24, Y+2	; 0x02
 814:	80 83       	st	Z, r24
 816:	04 c0       	rjmp	.+8      	; 0x820 <DIO_voidSetPortDir+0xac>
		break;

		case'D':
		case'd':

			DDRD=value;
 818:	e1 e3       	ldi	r30, 0x31	; 49
 81a:	f0 e0       	ldi	r31, 0x00	; 0
 81c:	8a 81       	ldd	r24, Y+2	; 0x02
 81e:	80 83       	st	Z, r24
		break;
		default:
			break;

	}
}
 820:	0f 90       	pop	r0
 822:	0f 90       	pop	r0
 824:	0f 90       	pop	r0
 826:	0f 90       	pop	r0
 828:	cf 91       	pop	r28
 82a:	df 91       	pop	r29
 82c:	08 95       	ret

0000082e <DIO_voidWritePort>:
 * ARGUMENTS : uint8 PortName , uint8 value
 * DESCRIPTION : Used to write on  specific port as logic high or low
 * RETURN : No return
 */

void DIO_voidWritePort(uint8 PortName , uint8 value){
 82e:	df 93       	push	r29
 830:	cf 93       	push	r28
 832:	00 d0       	rcall	.+0      	; 0x834 <DIO_voidWritePort+0x6>
 834:	00 d0       	rcall	.+0      	; 0x836 <DIO_voidWritePort+0x8>
 836:	cd b7       	in	r28, 0x3d	; 61
 838:	de b7       	in	r29, 0x3e	; 62
 83a:	89 83       	std	Y+1, r24	; 0x01
 83c:	6a 83       	std	Y+2, r22	; 0x02
	switch(PortName){
 83e:	89 81       	ldd	r24, Y+1	; 0x01
 840:	28 2f       	mov	r18, r24
 842:	30 e0       	ldi	r19, 0x00	; 0
 844:	3c 83       	std	Y+4, r19	; 0x04
 846:	2b 83       	std	Y+3, r18	; 0x03
 848:	8b 81       	ldd	r24, Y+3	; 0x03
 84a:	9c 81       	ldd	r25, Y+4	; 0x04
 84c:	84 34       	cpi	r24, 0x44	; 68
 84e:	91 05       	cpc	r25, r1
 850:	09 f4       	brne	.+2      	; 0x854 <DIO_voidWritePort+0x26>
 852:	3f c0       	rjmp	.+126    	; 0x8d2 <DIO_voidWritePort+0xa4>
 854:	2b 81       	ldd	r18, Y+3	; 0x03
 856:	3c 81       	ldd	r19, Y+4	; 0x04
 858:	25 34       	cpi	r18, 0x45	; 69
 85a:	31 05       	cpc	r19, r1
 85c:	84 f4       	brge	.+32     	; 0x87e <DIO_voidWritePort+0x50>
 85e:	8b 81       	ldd	r24, Y+3	; 0x03
 860:	9c 81       	ldd	r25, Y+4	; 0x04
 862:	82 34       	cpi	r24, 0x42	; 66
 864:	91 05       	cpc	r25, r1
 866:	59 f1       	breq	.+86     	; 0x8be <DIO_voidWritePort+0x90>
 868:	2b 81       	ldd	r18, Y+3	; 0x03
 86a:	3c 81       	ldd	r19, Y+4	; 0x04
 86c:	23 34       	cpi	r18, 0x43	; 67
 86e:	31 05       	cpc	r19, r1
 870:	5c f5       	brge	.+86     	; 0x8c8 <DIO_voidWritePort+0x9a>
 872:	8b 81       	ldd	r24, Y+3	; 0x03
 874:	9c 81       	ldd	r25, Y+4	; 0x04
 876:	81 34       	cpi	r24, 0x41	; 65
 878:	91 05       	cpc	r25, r1
 87a:	e1 f0       	breq	.+56     	; 0x8b4 <DIO_voidWritePort+0x86>
 87c:	2e c0       	rjmp	.+92     	; 0x8da <DIO_voidWritePort+0xac>
 87e:	2b 81       	ldd	r18, Y+3	; 0x03
 880:	3c 81       	ldd	r19, Y+4	; 0x04
 882:	22 36       	cpi	r18, 0x62	; 98
 884:	31 05       	cpc	r19, r1
 886:	d9 f0       	breq	.+54     	; 0x8be <DIO_voidWritePort+0x90>
 888:	8b 81       	ldd	r24, Y+3	; 0x03
 88a:	9c 81       	ldd	r25, Y+4	; 0x04
 88c:	83 36       	cpi	r24, 0x63	; 99
 88e:	91 05       	cpc	r25, r1
 890:	34 f4       	brge	.+12     	; 0x89e <DIO_voidWritePort+0x70>
 892:	2b 81       	ldd	r18, Y+3	; 0x03
 894:	3c 81       	ldd	r19, Y+4	; 0x04
 896:	21 36       	cpi	r18, 0x61	; 97
 898:	31 05       	cpc	r19, r1
 89a:	61 f0       	breq	.+24     	; 0x8b4 <DIO_voidWritePort+0x86>
 89c:	1e c0       	rjmp	.+60     	; 0x8da <DIO_voidWritePort+0xac>
 89e:	8b 81       	ldd	r24, Y+3	; 0x03
 8a0:	9c 81       	ldd	r25, Y+4	; 0x04
 8a2:	83 36       	cpi	r24, 0x63	; 99
 8a4:	91 05       	cpc	r25, r1
 8a6:	81 f0       	breq	.+32     	; 0x8c8 <DIO_voidWritePort+0x9a>
 8a8:	2b 81       	ldd	r18, Y+3	; 0x03
 8aa:	3c 81       	ldd	r19, Y+4	; 0x04
 8ac:	24 36       	cpi	r18, 0x64	; 100
 8ae:	31 05       	cpc	r19, r1
 8b0:	81 f0       	breq	.+32     	; 0x8d2 <DIO_voidWritePort+0xa4>
 8b2:	13 c0       	rjmp	.+38     	; 0x8da <DIO_voidWritePort+0xac>
			case'A':
			case'a':

				PORTA=value;
 8b4:	eb e3       	ldi	r30, 0x3B	; 59
 8b6:	f0 e0       	ldi	r31, 0x00	; 0
 8b8:	8a 81       	ldd	r24, Y+2	; 0x02
 8ba:	80 83       	st	Z, r24
 8bc:	0e c0       	rjmp	.+28     	; 0x8da <DIO_voidWritePort+0xac>
			break;

			case'B':
			case'b':

				PORTB=value;
 8be:	e8 e3       	ldi	r30, 0x38	; 56
 8c0:	f0 e0       	ldi	r31, 0x00	; 0
 8c2:	8a 81       	ldd	r24, Y+2	; 0x02
 8c4:	80 83       	st	Z, r24
 8c6:	09 c0       	rjmp	.+18     	; 0x8da <DIO_voidWritePort+0xac>
			break;

			case'C':
			case'c':

				PORTC=value;
 8c8:	e5 e3       	ldi	r30, 0x35	; 53
 8ca:	f0 e0       	ldi	r31, 0x00	; 0
 8cc:	8a 81       	ldd	r24, Y+2	; 0x02
 8ce:	80 83       	st	Z, r24
 8d0:	04 c0       	rjmp	.+8      	; 0x8da <DIO_voidWritePort+0xac>
			break;

			case'D':
			case'd':

				PORTD=value;
 8d2:	e2 e3       	ldi	r30, 0x32	; 50
 8d4:	f0 e0       	ldi	r31, 0x00	; 0
 8d6:	8a 81       	ldd	r24, Y+2	; 0x02
 8d8:	80 83       	st	Z, r24
			default:
				break;


	}
}
 8da:	0f 90       	pop	r0
 8dc:	0f 90       	pop	r0
 8de:	0f 90       	pop	r0
 8e0:	0f 90       	pop	r0
 8e2:	cf 91       	pop	r28
 8e4:	df 91       	pop	r29
 8e6:	08 95       	ret

000008e8 <DIO_u8ReadPort>:
 * ARGUMENTS : uint8 PortName
 * DESCRIPTION : Used to read specific port
 * RETURN : Reading of the port
 */

uint8 DIO_u8ReadPort(uint8 PortName){
 8e8:	df 93       	push	r29
 8ea:	cf 93       	push	r28
 8ec:	00 d0       	rcall	.+0      	; 0x8ee <DIO_u8ReadPort+0x6>
 8ee:	00 d0       	rcall	.+0      	; 0x8f0 <DIO_u8ReadPort+0x8>
 8f0:	cd b7       	in	r28, 0x3d	; 61
 8f2:	de b7       	in	r29, 0x3e	; 62
 8f4:	8a 83       	std	Y+2, r24	; 0x02
	uint8 value;
	switch(PortName){
 8f6:	8a 81       	ldd	r24, Y+2	; 0x02
 8f8:	28 2f       	mov	r18, r24
 8fa:	30 e0       	ldi	r19, 0x00	; 0
 8fc:	3c 83       	std	Y+4, r19	; 0x04
 8fe:	2b 83       	std	Y+3, r18	; 0x03
 900:	8b 81       	ldd	r24, Y+3	; 0x03
 902:	9c 81       	ldd	r25, Y+4	; 0x04
 904:	84 34       	cpi	r24, 0x44	; 68
 906:	91 05       	cpc	r25, r1
 908:	09 f4       	brne	.+2      	; 0x90c <DIO_u8ReadPort+0x24>
 90a:	3f c0       	rjmp	.+126    	; 0x98a <DIO_u8ReadPort+0xa2>
 90c:	2b 81       	ldd	r18, Y+3	; 0x03
 90e:	3c 81       	ldd	r19, Y+4	; 0x04
 910:	25 34       	cpi	r18, 0x45	; 69
 912:	31 05       	cpc	r19, r1
 914:	84 f4       	brge	.+32     	; 0x936 <DIO_u8ReadPort+0x4e>
 916:	8b 81       	ldd	r24, Y+3	; 0x03
 918:	9c 81       	ldd	r25, Y+4	; 0x04
 91a:	82 34       	cpi	r24, 0x42	; 66
 91c:	91 05       	cpc	r25, r1
 91e:	59 f1       	breq	.+86     	; 0x976 <DIO_u8ReadPort+0x8e>
 920:	2b 81       	ldd	r18, Y+3	; 0x03
 922:	3c 81       	ldd	r19, Y+4	; 0x04
 924:	23 34       	cpi	r18, 0x43	; 67
 926:	31 05       	cpc	r19, r1
 928:	5c f5       	brge	.+86     	; 0x980 <DIO_u8ReadPort+0x98>
 92a:	8b 81       	ldd	r24, Y+3	; 0x03
 92c:	9c 81       	ldd	r25, Y+4	; 0x04
 92e:	81 34       	cpi	r24, 0x41	; 65
 930:	91 05       	cpc	r25, r1
 932:	e1 f0       	breq	.+56     	; 0x96c <DIO_u8ReadPort+0x84>
 934:	2e c0       	rjmp	.+92     	; 0x992 <DIO_u8ReadPort+0xaa>
 936:	2b 81       	ldd	r18, Y+3	; 0x03
 938:	3c 81       	ldd	r19, Y+4	; 0x04
 93a:	22 36       	cpi	r18, 0x62	; 98
 93c:	31 05       	cpc	r19, r1
 93e:	d9 f0       	breq	.+54     	; 0x976 <DIO_u8ReadPort+0x8e>
 940:	8b 81       	ldd	r24, Y+3	; 0x03
 942:	9c 81       	ldd	r25, Y+4	; 0x04
 944:	83 36       	cpi	r24, 0x63	; 99
 946:	91 05       	cpc	r25, r1
 948:	34 f4       	brge	.+12     	; 0x956 <DIO_u8ReadPort+0x6e>
 94a:	2b 81       	ldd	r18, Y+3	; 0x03
 94c:	3c 81       	ldd	r19, Y+4	; 0x04
 94e:	21 36       	cpi	r18, 0x61	; 97
 950:	31 05       	cpc	r19, r1
 952:	61 f0       	breq	.+24     	; 0x96c <DIO_u8ReadPort+0x84>
 954:	1e c0       	rjmp	.+60     	; 0x992 <DIO_u8ReadPort+0xaa>
 956:	8b 81       	ldd	r24, Y+3	; 0x03
 958:	9c 81       	ldd	r25, Y+4	; 0x04
 95a:	83 36       	cpi	r24, 0x63	; 99
 95c:	91 05       	cpc	r25, r1
 95e:	81 f0       	breq	.+32     	; 0x980 <DIO_u8ReadPort+0x98>
 960:	2b 81       	ldd	r18, Y+3	; 0x03
 962:	3c 81       	ldd	r19, Y+4	; 0x04
 964:	24 36       	cpi	r18, 0x64	; 100
 966:	31 05       	cpc	r19, r1
 968:	81 f0       	breq	.+32     	; 0x98a <DIO_u8ReadPort+0xa2>
 96a:	13 c0       	rjmp	.+38     	; 0x992 <DIO_u8ReadPort+0xaa>
		case'A':
		case'a':
			value=PINA;
 96c:	e9 e3       	ldi	r30, 0x39	; 57
 96e:	f0 e0       	ldi	r31, 0x00	; 0
 970:	80 81       	ld	r24, Z
 972:	89 83       	std	Y+1, r24	; 0x01
 974:	0e c0       	rjmp	.+28     	; 0x992 <DIO_u8ReadPort+0xaa>
		break;
		case'B':
		case'b':
			value=PINB;
 976:	e6 e3       	ldi	r30, 0x36	; 54
 978:	f0 e0       	ldi	r31, 0x00	; 0
 97a:	80 81       	ld	r24, Z
 97c:	89 83       	std	Y+1, r24	; 0x01
 97e:	09 c0       	rjmp	.+18     	; 0x992 <DIO_u8ReadPort+0xaa>

		break;
		case'C':
		case'c':
			value=PINC;
 980:	e3 e3       	ldi	r30, 0x33	; 51
 982:	f0 e0       	ldi	r31, 0x00	; 0
 984:	80 81       	ld	r24, Z
 986:	89 83       	std	Y+1, r24	; 0x01
 988:	04 c0       	rjmp	.+8      	; 0x992 <DIO_u8ReadPort+0xaa>

		break;
		case'D':
		case'd':
			value=PIND;
 98a:	e0 e3       	ldi	r30, 0x30	; 48
 98c:	f0 e0       	ldi	r31, 0x00	; 0
 98e:	80 81       	ld	r24, Z
 990:	89 83       	std	Y+1, r24	; 0x01
		break;
		default:
		break;

	}
	return value;
 992:	89 81       	ldd	r24, Y+1	; 0x01
}
 994:	0f 90       	pop	r0
 996:	0f 90       	pop	r0
 998:	0f 90       	pop	r0
 99a:	0f 90       	pop	r0
 99c:	cf 91       	pop	r28
 99e:	df 91       	pop	r29
 9a0:	08 95       	ret

000009a2 <DIO_voidTogglePort>:
 * ARGUMENTS : uint8 PortName
 * DESCRIPTION : Used to toggle specific port
 * RETURN : No return
 */

void DIO_voidTogglePort(uint8 PortName){
 9a2:	df 93       	push	r29
 9a4:	cf 93       	push	r28
 9a6:	00 d0       	rcall	.+0      	; 0x9a8 <DIO_voidTogglePort+0x6>
 9a8:	0f 92       	push	r0
 9aa:	cd b7       	in	r28, 0x3d	; 61
 9ac:	de b7       	in	r29, 0x3e	; 62
 9ae:	89 83       	std	Y+1, r24	; 0x01
	switch(PortName){
 9b0:	89 81       	ldd	r24, Y+1	; 0x01
 9b2:	28 2f       	mov	r18, r24
 9b4:	30 e0       	ldi	r19, 0x00	; 0
 9b6:	3b 83       	std	Y+3, r19	; 0x03
 9b8:	2a 83       	std	Y+2, r18	; 0x02
 9ba:	8a 81       	ldd	r24, Y+2	; 0x02
 9bc:	9b 81       	ldd	r25, Y+3	; 0x03
 9be:	84 34       	cpi	r24, 0x44	; 68
 9c0:	91 05       	cpc	r25, r1
 9c2:	09 f4       	brne	.+2      	; 0x9c6 <DIO_voidTogglePort+0x24>
 9c4:	48 c0       	rjmp	.+144    	; 0xa56 <DIO_voidTogglePort+0xb4>
 9c6:	2a 81       	ldd	r18, Y+2	; 0x02
 9c8:	3b 81       	ldd	r19, Y+3	; 0x03
 9ca:	25 34       	cpi	r18, 0x45	; 69
 9cc:	31 05       	cpc	r19, r1
 9ce:	84 f4       	brge	.+32     	; 0x9f0 <DIO_voidTogglePort+0x4e>
 9d0:	8a 81       	ldd	r24, Y+2	; 0x02
 9d2:	9b 81       	ldd	r25, Y+3	; 0x03
 9d4:	82 34       	cpi	r24, 0x42	; 66
 9d6:	91 05       	cpc	r25, r1
 9d8:	71 f1       	breq	.+92     	; 0xa36 <DIO_voidTogglePort+0x94>
 9da:	2a 81       	ldd	r18, Y+2	; 0x02
 9dc:	3b 81       	ldd	r19, Y+3	; 0x03
 9de:	23 34       	cpi	r18, 0x43	; 67
 9e0:	31 05       	cpc	r19, r1
 9e2:	8c f5       	brge	.+98     	; 0xa46 <DIO_voidTogglePort+0xa4>
 9e4:	8a 81       	ldd	r24, Y+2	; 0x02
 9e6:	9b 81       	ldd	r25, Y+3	; 0x03
 9e8:	81 34       	cpi	r24, 0x41	; 65
 9ea:	91 05       	cpc	r25, r1
 9ec:	e1 f0       	breq	.+56     	; 0xa26 <DIO_voidTogglePort+0x84>
 9ee:	3a c0       	rjmp	.+116    	; 0xa64 <DIO_voidTogglePort+0xc2>
 9f0:	2a 81       	ldd	r18, Y+2	; 0x02
 9f2:	3b 81       	ldd	r19, Y+3	; 0x03
 9f4:	22 36       	cpi	r18, 0x62	; 98
 9f6:	31 05       	cpc	r19, r1
 9f8:	f1 f0       	breq	.+60     	; 0xa36 <DIO_voidTogglePort+0x94>
 9fa:	8a 81       	ldd	r24, Y+2	; 0x02
 9fc:	9b 81       	ldd	r25, Y+3	; 0x03
 9fe:	83 36       	cpi	r24, 0x63	; 99
 a00:	91 05       	cpc	r25, r1
 a02:	34 f4       	brge	.+12     	; 0xa10 <DIO_voidTogglePort+0x6e>
 a04:	2a 81       	ldd	r18, Y+2	; 0x02
 a06:	3b 81       	ldd	r19, Y+3	; 0x03
 a08:	21 36       	cpi	r18, 0x61	; 97
 a0a:	31 05       	cpc	r19, r1
 a0c:	61 f0       	breq	.+24     	; 0xa26 <DIO_voidTogglePort+0x84>
 a0e:	2a c0       	rjmp	.+84     	; 0xa64 <DIO_voidTogglePort+0xc2>
 a10:	8a 81       	ldd	r24, Y+2	; 0x02
 a12:	9b 81       	ldd	r25, Y+3	; 0x03
 a14:	83 36       	cpi	r24, 0x63	; 99
 a16:	91 05       	cpc	r25, r1
 a18:	b1 f0       	breq	.+44     	; 0xa46 <DIO_voidTogglePort+0xa4>
 a1a:	2a 81       	ldd	r18, Y+2	; 0x02
 a1c:	3b 81       	ldd	r19, Y+3	; 0x03
 a1e:	24 36       	cpi	r18, 0x64	; 100
 a20:	31 05       	cpc	r19, r1
 a22:	c9 f0       	breq	.+50     	; 0xa56 <DIO_voidTogglePort+0xb4>
 a24:	1f c0       	rjmp	.+62     	; 0xa64 <DIO_voidTogglePort+0xc2>
		case'A':
		case'a':
			TOG_REG(PORTA);
 a26:	ab e3       	ldi	r26, 0x3B	; 59
 a28:	b0 e0       	ldi	r27, 0x00	; 0
 a2a:	eb e3       	ldi	r30, 0x3B	; 59
 a2c:	f0 e0       	ldi	r31, 0x00	; 0
 a2e:	80 81       	ld	r24, Z
 a30:	80 95       	com	r24
 a32:	8c 93       	st	X, r24
 a34:	17 c0       	rjmp	.+46     	; 0xa64 <DIO_voidTogglePort+0xc2>
		break;
		case'B':
		case'b':
			TOG_REG(PORTB);
 a36:	a8 e3       	ldi	r26, 0x38	; 56
 a38:	b0 e0       	ldi	r27, 0x00	; 0
 a3a:	e8 e3       	ldi	r30, 0x38	; 56
 a3c:	f0 e0       	ldi	r31, 0x00	; 0
 a3e:	80 81       	ld	r24, Z
 a40:	80 95       	com	r24
 a42:	8c 93       	st	X, r24
 a44:	0f c0       	rjmp	.+30     	; 0xa64 <DIO_voidTogglePort+0xc2>

		break;
		case'C':
		case'c':
			TOG_REG(PORTC);
 a46:	a5 e3       	ldi	r26, 0x35	; 53
 a48:	b0 e0       	ldi	r27, 0x00	; 0
 a4a:	e5 e3       	ldi	r30, 0x35	; 53
 a4c:	f0 e0       	ldi	r31, 0x00	; 0
 a4e:	80 81       	ld	r24, Z
 a50:	80 95       	com	r24
 a52:	8c 93       	st	X, r24
 a54:	07 c0       	rjmp	.+14     	; 0xa64 <DIO_voidTogglePort+0xc2>

		break;
		case'D':
		case'd':
			TOG_REG(PORTD);
 a56:	a2 e3       	ldi	r26, 0x32	; 50
 a58:	b0 e0       	ldi	r27, 0x00	; 0
 a5a:	e2 e3       	ldi	r30, 0x32	; 50
 a5c:	f0 e0       	ldi	r31, 0x00	; 0
 a5e:	80 81       	ld	r24, Z
 a60:	80 95       	com	r24
 a62:	8c 93       	st	X, r24
		break;
		default:
		break;

	}
}
 a64:	0f 90       	pop	r0
 a66:	0f 90       	pop	r0
 a68:	0f 90       	pop	r0
 a6a:	cf 91       	pop	r28
 a6c:	df 91       	pop	r29
 a6e:	08 95       	ret

00000a70 <LED_voidINIT>:

#include"STD_MACROS.h"
#include"DIO.h"
#include"LED.h"

void LED_voidINIT(uint8 port, uint8 pin){
 a70:	df 93       	push	r29
 a72:	cf 93       	push	r28
 a74:	00 d0       	rcall	.+0      	; 0xa76 <LED_voidINIT+0x6>
 a76:	cd b7       	in	r28, 0x3d	; 61
 a78:	de b7       	in	r29, 0x3e	; 62
 a7a:	89 83       	std	Y+1, r24	; 0x01
 a7c:	6a 83       	std	Y+2, r22	; 0x02

	DIO_voidSetPinDir(port,pin , OUTPUT_PIN);
 a7e:	89 81       	ldd	r24, Y+1	; 0x01
 a80:	6a 81       	ldd	r22, Y+2	; 0x02
 a82:	41 e0       	ldi	r20, 0x01	; 1
 a84:	0e 94 56 00 	call	0xac	; 0xac <DIO_voidSetPinDir>

}
 a88:	0f 90       	pop	r0
 a8a:	0f 90       	pop	r0
 a8c:	cf 91       	pop	r28
 a8e:	df 91       	pop	r29
 a90:	08 95       	ret

00000a92 <LED_voidON>:
void LED_voidON(uint8 port, uint8 pin){
 a92:	df 93       	push	r29
 a94:	cf 93       	push	r28
 a96:	00 d0       	rcall	.+0      	; 0xa98 <LED_voidON+0x6>
 a98:	cd b7       	in	r28, 0x3d	; 61
 a9a:	de b7       	in	r29, 0x3e	; 62
 a9c:	89 83       	std	Y+1, r24	; 0x01
 a9e:	6a 83       	std	Y+2, r22	; 0x02

	DIO_voidWritePin(port,pin,HIGH);
 aa0:	89 81       	ldd	r24, Y+1	; 0x01
 aa2:	6a 81       	ldd	r22, Y+2	; 0x02
 aa4:	41 e0       	ldi	r20, 0x01	; 1
 aa6:	0e 94 57 01 	call	0x2ae	; 0x2ae <DIO_voidWritePin>

}
 aaa:	0f 90       	pop	r0
 aac:	0f 90       	pop	r0
 aae:	cf 91       	pop	r28
 ab0:	df 91       	pop	r29
 ab2:	08 95       	ret

00000ab4 <LED_voidOFF>:
void LED_voidOFF(uint8 port, uint8 pin){
 ab4:	df 93       	push	r29
 ab6:	cf 93       	push	r28
 ab8:	00 d0       	rcall	.+0      	; 0xaba <LED_voidOFF+0x6>
 aba:	cd b7       	in	r28, 0x3d	; 61
 abc:	de b7       	in	r29, 0x3e	; 62
 abe:	89 83       	std	Y+1, r24	; 0x01
 ac0:	6a 83       	std	Y+2, r22	; 0x02

	DIO_voidWritePin(port,pin,LOW);
 ac2:	89 81       	ldd	r24, Y+1	; 0x01
 ac4:	6a 81       	ldd	r22, Y+2	; 0x02
 ac6:	40 e0       	ldi	r20, 0x00	; 0
 ac8:	0e 94 57 01 	call	0x2ae	; 0x2ae <DIO_voidWritePin>

}
 acc:	0f 90       	pop	r0
 ace:	0f 90       	pop	r0
 ad0:	cf 91       	pop	r28
 ad2:	df 91       	pop	r29
 ad4:	08 95       	ret

00000ad6 <LED_voidToggle>:
void LED_voidToggle(uint8 port ,uint8 pin){
 ad6:	df 93       	push	r29
 ad8:	cf 93       	push	r28
 ada:	00 d0       	rcall	.+0      	; 0xadc <LED_voidToggle+0x6>
 adc:	cd b7       	in	r28, 0x3d	; 61
 ade:	de b7       	in	r29, 0x3e	; 62
 ae0:	89 83       	std	Y+1, r24	; 0x01
 ae2:	6a 83       	std	Y+2, r22	; 0x02
	DIO_voidTogglePin(port,pin);
 ae4:	89 81       	ldd	r24, Y+1	; 0x01
 ae6:	6a 81       	ldd	r22, Y+2	; 0x02
 ae8:	0e 94 20 03 	call	0x640	; 0x640 <DIO_voidTogglePin>
}
 aec:	0f 90       	pop	r0
 aee:	0f 90       	pop	r0
 af0:	cf 91       	pop	r28
 af2:	df 91       	pop	r29
 af4:	08 95       	ret

00000af6 <LED_u8ReadStatus>:
uint8 LED_u8ReadStatus(uint8 port ,uint8 pin){
 af6:	df 93       	push	r29
 af8:	cf 93       	push	r28
 afa:	00 d0       	rcall	.+0      	; 0xafc <LED_u8ReadStatus+0x6>
 afc:	cd b7       	in	r28, 0x3d	; 61
 afe:	de b7       	in	r29, 0x3e	; 62
 b00:	89 83       	std	Y+1, r24	; 0x01
 b02:	6a 83       	std	Y+2, r22	; 0x02

	return DIO_u8ReadPin(port ,pin);
 b04:	89 81       	ldd	r24, Y+1	; 0x01
 b06:	6a 81       	ldd	r22, Y+2	; 0x02
 b08:	0e 94 58 02 	call	0x4b0	; 0x4b0 <DIO_u8ReadPin>
}
 b0c:	0f 90       	pop	r0
 b0e:	0f 90       	pop	r0
 b10:	cf 91       	pop	r28
 b12:	df 91       	pop	r29
 b14:	08 95       	ret

00000b16 <BUTTON_voidINIT>:
 */
#include"STD_MACROS.h"
#include"DIO.h"
#include"BUTTON.h"

void BUTTON_voidINIT(uint8 port , uint8 pin){
 b16:	df 93       	push	r29
 b18:	cf 93       	push	r28
 b1a:	00 d0       	rcall	.+0      	; 0xb1c <BUTTON_voidINIT+0x6>
 b1c:	cd b7       	in	r28, 0x3d	; 61
 b1e:	de b7       	in	r29, 0x3e	; 62
 b20:	89 83       	std	Y+1, r24	; 0x01
 b22:	6a 83       	std	Y+2, r22	; 0x02
	DIO_voidSetPinDir(port,pin,INPUT_PIN);
 b24:	89 81       	ldd	r24, Y+1	; 0x01
 b26:	6a 81       	ldd	r22, Y+2	; 0x02
 b28:	40 e0       	ldi	r20, 0x00	; 0
 b2a:	0e 94 56 00 	call	0xac	; 0xac <DIO_voidSetPinDir>
}
 b2e:	0f 90       	pop	r0
 b30:	0f 90       	pop	r0
 b32:	cf 91       	pop	r28
 b34:	df 91       	pop	r29
 b36:	08 95       	ret

00000b38 <BUTTON_u8Read>:
uint8 BUTTON_u8Read(uint8 port ,uint8 pin){
 b38:	df 93       	push	r29
 b3a:	cf 93       	push	r28
 b3c:	00 d0       	rcall	.+0      	; 0xb3e <BUTTON_u8Read+0x6>
 b3e:	cd b7       	in	r28, 0x3d	; 61
 b40:	de b7       	in	r29, 0x3e	; 62
 b42:	89 83       	std	Y+1, r24	; 0x01
 b44:	6a 83       	std	Y+2, r22	; 0x02
	return DIO_u8ReadPin(port,pin);
 b46:	89 81       	ldd	r24, Y+1	; 0x01
 b48:	6a 81       	ldd	r22, Y+2	; 0x02
 b4a:	0e 94 58 02 	call	0x4b0	; 0x4b0 <DIO_u8ReadPin>
}
 b4e:	0f 90       	pop	r0
 b50:	0f 90       	pop	r0
 b52:	cf 91       	pop	r28
 b54:	df 91       	pop	r29
 b56:	08 95       	ret

00000b58 <_exit>:
 b58:	f8 94       	cli

00000b5a <__stop_program>:
 b5a:	ff cf       	rjmp	.-2      	; 0xb5a <__stop_program>
